definitions:
  tcaptcha.Che:
    type: object
  tcaptcha.Ct:
    properties:
      captchaKey:
        type: string
      imgBase64:
        type: string
      thumbBase64:
        type: string
    type: object
  userview.Ident:
    properties:
      credential:
        type: string
      identifier:
        type: string
      identityType:
        type: string
    type: object
  userview.LoginVo:
    properties:
      info:
        type: string
    type: object
  userview.RegisterVo:
    properties:
      code:
        type: string
      credential:
        type: string
      identifier:
        type: string
      identityType:
        type: string
    type: object
  userview.UserList:
    properties:
      address:
        type: string
      authList:
        description: '------- 因为用户有多种登录方式，所以这里存储账密的切片'
        items:
          $ref: '#/definitions/userview.Ident'
        type: array
      avatar:
        type: string
      email:
        type: string
      isDeleted:
        description: 与deletedAt是否为空有关，为空是启用，不为空是删除——【软删除技术】
        type: boolean
      nickname:
        type: string
      phone:
        type: string
      status:
        type: boolean
      uuid:
        type: string
    type: object
info:
  contact: {}
paths:
  /v1/tool/60s:
    get:
      responses:
        "200":
          description: '{"id": "str"}'
          schema:
            type: string
      tags:
      - 每天60秒看世界
  /v1/tool/go_captcha_check_data:
    post:
      consumes:
      - application/json
      parameters:
      - description: '{dots:'
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tcaptcha.Che'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: bool
      tags:
      - 校验验证码
  /v1/tool/go_captcha_data:
    get:
      responses:
        "200":
          description: captcha
          schema:
            $ref: '#/definitions/tcaptcha.Ct'
      tags:
      - 生成验证码
  /v1/user/delete/{uuid}:
    delete:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: user_basic表的uuid
        in: path
        name: uuid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: bool
      summary: 删除用户
      tags:
      - 用户模块
  /v1/user/judge:
    get:
      parameters:
      - description: 账号
        in: query
        name: Identifier
        required: true
        type: string
      - description: 账号类型
        in: query
        name: IdentityType
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: bool
      summary: 判断用户是否存在
      tags:
      - 用户模块
  /v1/user/list:
    get:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 页码数量
        in: query
        name: pageNum
        type: integer
      - description: 分页大小
        in: query
        name: pageSize
        type: integer
      - description: 模糊搜索关键字
        in: query
        name: keyword
        type: string
      - description: 是否反向搜索
        in: query
        name: desc
        type: boolean
      responses:
        "200":
          description: list
          schema:
            $ref: '#/definitions/userview.UserList'
      summary: 用户列表
      tags:
      - 用户模块
  /v1/user/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: '{Info}'
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/userview.LoginVo'
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 用户登录
      tags:
      - 用户模块
  /v1/user/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: '{IdentityType,Identifier,Credential,Code}'
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/userview.RegisterVo'
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 新增用户
      tags:
      - 用户模块
  /v1/user/register_code:
    get:
      parameters:
      - description: 账号
        in: query
        name: Identifier
        required: true
        type: string
      - description: 账号类型
        in: query
        name: IdentityType
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 注册验证码
      tags:
      - 用户模块
swagger: "2.0"
